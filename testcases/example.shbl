fn compute_area(float radius) float {
	float r_squared = radius * radius;
	return pi * r_squared;
}

enum EnumTest { value1, value2, value3 };
const float pi = 3.14;

fn main() {
	EnumTest e1 = value1;

	int	a  = 1;
	float c = 1.0;
	int _underscored = 0;

	float area_c = compute_area(c);

	float d = a * c;

	int accumulator = 0;
	for(int i = 0; i < 10; i += 1) {
		if (accumulator % 2 == 0) {
			accumulator *= 7;
		} else {
			accumulator += i;
		}
	}

	while(accumulator > 0) {
		accumulator -= i;
	}

	do {
		accumulator += 1;
	} while(accumulator < 10);

	bool flag = 0;
	switch(accumulator) {
		case 10: {
			flag = 1;
			accumulator = 0;
		}
		default: {
			accumualtor = 10;
		}
	}
}
===
Return statement
Function (compute_area) parsed successfully
Enum (EnumTest) parsed successfully
Constant variable definition parsed successfully
Function call (compute_area) parsed successfully
Function (main) parsed successfully
